// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Server {
  id             Int              @id @default(autoincrement())
  created_at     DateTime         @default(now())
  updated_at     DateTime         @default(now()) @updatedAt
  server_name    String
  guests         Guest[]
  options        Options[]
  GuestOptions   GuestOptions[]
  Shiftings      Shiftings[]
  GuestShiftings GuestShiftings[]
}

model Guest {
  id            Int            @id @default(autoincrement())
  server_id     Int
  server        Server         @relation(fields: [server_id], references: [id])
  created_at    DateTime       @default(now())
  updated_at    DateTime       @default(now()) @updatedAt
  first_name    String
  last_name     String
  anonymous     Boolean        @default(false)
  challenge     String         @unique @default(cuid())
  guest_options GuestOptions[]

  @@unique([server_id, id])
  @@unique([server_id, first_name, last_name])
}

model Options {
  id            Int            @id @default(autoincrement())
  server_id     Int
  server        Server         @relation(fields: [server_id], references: [id])
  created_at    DateTime       @default(now())
  updated_at    DateTime       @default(now()) @updatedAt
  name          String
  label         String
  warning       String?
  guest_options GuestOptions[]

  @@unique([server_id, name])
}

model GuestOptions {
  id         Int      @id @default(autoincrement())
  server_id  Int
  server     Server   @relation(fields: [server_id], references: [id])
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
  guest_id   Int
  guest      Guest    @relation(fields: [guest_id], references: [id])
  option_id  Int
  option     Options  @relation(fields: [option_id], references: [id])

  @@unique([guest_id, option_id])
}

model Shiftings {
  id                                 Int      @id @default(autoincrement())
  server_id                          Int
  server                             Server   @relation(fields: [server_id], references: [id])
  created_at                         DateTime @default(now())
  updated_at                         DateTime @default(now()) @updatedAt
  shift_name                         String
  shift_desc                         String
  shift_start                        DateTime
  shift_duration                     String
  shift_num_of_slots                 Int
  shift_num_of_participants_per_slot Int
  shift_min_slot_overlap             Int

  @@unique([server_id, id])
}

model GuestShiftings {
  id          Int      @id @default(autoincrement())
  server_id   Int
  server      Server   @relation(fields: [server_id], references: [id])
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt
  guest_id    Int
  shifting_id Int
  slot_number Int

  @@unique([guest_id, shifting_id])
}
