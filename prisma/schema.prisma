// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Server {
  id           Int       @id @default(autoincrement())
  created_at   DateTime  @default(now())
  updated_at   DateTime  @default(now()) @updatedAt
  server_name  String    @unique
  server_host  String    @unique
  server_video String?
  guests       Guest[]
  options      Options[]
  Shiftings    Shifts[]
  Ads          Ads[]
  Details      Details[]
}

model Guest {
  id            Int            @id @default(autoincrement())
  server_id     Int
  server        Server         @relation(fields: [server_id], references: [id], onDelete: Cascade)
  created_at    DateTime       @default(now())
  updated_at    DateTime       @default(now()) @updatedAt
  first_name    String
  last_name     String
  anonymous     Boolean        @default(false)
  challenge     String         @unique @default(cuid())
  guest_options GuestOptions[]
  guest_shifts  GuestShifts[]

  @@unique([server_id, id])
  @@unique([server_id, first_name, last_name])
}

model Options {
  id            Int            @id @default(autoincrement())
  server_id     Int
  server        Server         @relation(fields: [server_id], references: [id], onDelete: Cascade)
  name          String
  guest_options GuestOptions[]
  options_info  OptionsInfo[]

  @@unique([server_id, name])
}

model OptionsInfo {
  option_id Int
  option    Options @relation(fields: [option_id], references: [id], onDelete: Cascade)
  lang      String
  label     String
  warning   String?

  @@unique([option_id, lang])
}

model GuestOptions {
  id        Int     @id @default(autoincrement())
  guest_id  Int
  guest     Guest   @relation(fields: [guest_id], references: [id], onDelete: Cascade)
  option_id Int
  option    Options @relation(fields: [option_id], references: [id], onDelete: Cascade)

  @@unique([guest_id, option_id])
}

model Ads {
  id        Int       @id @default(autoincrement())
  server_id Int
  server    Server    @relation(fields: [server_id], references: [id], onDelete: Cascade)
  link      String?
  image     String?
  ads_info  AdsInfo[]
}

model AdsInfo {
  id      Int    @id @default(autoincrement())
  ads_id  Int
  ads     Ads    @relation(fields: [ads_id], references: [id], onDelete: Cascade)
  lang    String
  title   String
  content String

  @@unique([ads_id, lang])
}

model Details {
  id           Int           @id @default(autoincrement())
  server_id    Int
  server       Server        @relation(fields: [server_id], references: [id], onDelete: Cascade)
  details_info DetailsInfo[]
}

model DetailsInfo {
  details_id Int
  Details    Details @relation(fields: [details_id], references: [id], onDelete: Cascade)
  lang       String
  title      String
  content    String

  @@unique([details_id, lang])
}

model Shifts {
  id          Int           @id @default(autoincrement())
  server_id   Int
  server      Server        @relation(fields: [server_id], references: [id], onDelete: Cascade)
  shift_info  ShiftsInfo[]
  shift_slots ShiftsSlots[]
}

model ShiftsInfo {
  shift_id Int
  shift    Shifts @relation(fields: [shift_id], references: [id], onDelete: Cascade)
  lang     String
  name     String
  desc     String

  @@unique([shift_id, lang])
}

model ShiftsSlots {
  id                  Int           @id @default(autoincrement())
  shift_id            Int
  shift               Shifts        @relation(fields: [shift_id], references: [id], onDelete: Cascade)
  start               DateTime
  end                 DateTime
  num_of_participants Int
  guest_shifts        GuestShifts[]

  @@unique([shift_id, start, end])
}

model GuestShifts {
  id            Int         @id @default(autoincrement())
  guest_id      Int
  guest         Guest       @relation(fields: [guest_id], references: [id], onDelete: Cascade)
  shift_slot_id Int
  shift_slot    ShiftsSlots @relation(fields: [shift_slot_id], references: [id], onDelete: Cascade)
}
